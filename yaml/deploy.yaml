---
# Source: operator/templates/rbac.yaml
# Scoped service account
apiVersion: v1
kind: ServiceAccount
metadata:
  name: operator
  labels:
    app: operator
    app.kubernetes.io/name: operator
    app.kubernetes.io/version: "1.16.0"
  namespace: default
automountServiceAccountToken: true
---
# Source: operator/templates/rbac.yaml
# Access for the service account
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: operator
rules:
  - apiGroups: ["sinabro.io"]
    resources: ["sinabros", "sinabros/status"]
    verbs: ["get", "list", "watch", "patch"]
  - apiGroups: ["events.k8s.io"]
    resources: ["events"]
    verbs: ["create"]
---
# Source: operator/templates/rbac.yaml
# Binding the role to the account
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: operator
subjects:
- kind: ServiceAccount
  namespace: default
  name: operator
roleRef:
  kind: ClusterRole
  name: operator
  apiGroup: rbac.authorization.k8s.io
---
# Source: operator/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: operator
  labels:
    app: operator
    app.kubernetes.io/name: operator
    app.kubernetes.io/version: "1.16.0"
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 8080
      protocol: TCP
      name: http
  selector:
    app: operator
---
# Source: operator/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: operator
  namespace: default
  labels:
    app: operator
    app.kubernetes.io/name: operator
    app.kubernetes.io/version: "1.16.0"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: operator
  template:
    metadata:
      labels:
        app: operator
      annotations:
        kubectl.kubernetes.io/default-container: operator
    spec:
      serviceAccountName: operator
      securityContext:
        {}
      containers:
        - name: operator
          image: "sinabro/operator:1.16.0"
          imagePullPolicy: IfNotPresent
          securityContext:
            {}
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 128Mi
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          # env:
          #   - name: OPENTELEMETRY_ENDPOINT_URL
          #     value: ""
          #   - name: RUST_LOG
          #     value: "info,kube=debug,controller=debug"
          readinessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
